{"version":3,"sources":["_fonts.scss","_variables.scss","style.css","_base.scss","_main.scss","_mixin.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@use \"variables\" as v;\n\n// ------------------------------------------------\n//  ファイル名：_fonts.scss\n//  機能：フォントのスタイルを記述する\n// ------------------------------------------------\n// NotoSansJP Regular\n@font-face {\n  font-family: \"Noto Sans JP\";\n  font-style: normal;\n  font-weight: v.$fontweight-regular;\n  src: url(\"../fonts/NotoSansJP-Regular.otf\") format(\"opentype\");\n}\n\n// NotoSansJP Bold\n@font-face {\n  font-family: \"Noto Sans JP\";\n  font-style: normal;\n  font-weight: v.$fontweight-bold;\n  src: url(\"../fonts/NotoSansJP-Bold.otf\") format(\"opentype\");\n}\n\n// Roboto Regular\n@font-face {\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: v.$fontweight-regular;\n  src: url(\"../fonts/Roboto-Regular.ttf\") format(\"truetype\");\n}\n\n// Roboto Medium\n@font-face {\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: v.$fontweight-medium;\n  src: url(\"../fonts/Roboto-Medium.ttf\") format(\"truetype\");\n}\n","// ------------------------------------------------\n//    ファイル名：_variables.scss\n//    機能：変数を記述する\n// --------------------------------------------------\n// 色\n$color-white: #fff;\n$color-black: #000;\n$color-blue1: #011950;\n$color-blue2: #001135;\n\n// フォントの太さ\n$fontweight-thin: 100;\n$fontweight-light: 300;\n$fontweight-regular: 400;\n$fontweight-medium: 500;\n$fontweight-bold: 700;\n$fontweight-extrabold: 800;\n$fontweight-black: 900;\n\n// ブレークポイント\n$breakpoints: (\n  lg: 1440px,\n  sm: 768px,\n  // PC幅→スマホ幅へ切り替える幅\n) !default;\n","@font-face {\n  font-family: \"Noto Sans JP\";\n  font-style: normal;\n  font-weight: 400;\n  src: url(\"../fonts/NotoSansJP-Regular.otf\") format(\"opentype\");\n}\n@font-face {\n  font-family: \"Noto Sans JP\";\n  font-style: normal;\n  font-weight: 700;\n  src: url(\"../fonts/NotoSansJP-Bold.otf\") format(\"opentype\");\n}\n@font-face {\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  src: url(\"../fonts/Roboto-Regular.ttf\") format(\"truetype\");\n}\n@font-face {\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n  src: url(\"../fonts/Roboto-Medium.ttf\") format(\"truetype\");\n}\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  color: #000;\n  font-family: Roboto, \"Noto Sans JP\", sans-serif;\n  font-weight: 400;\n  line-height: normal;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: 100%;\n}\n\na {\n  color: #0069ff;\n}\n\nimg {\n  max-width: 100%;\n  vertical-align: top;\n}\n\n.ly_wrapper {\n  overflow-x: hidden;\n}\n\n.ly_header {\n  width: 100vw;\n  display: flex;\n  justify-content: space-between;\n}\n\n.ly_cont {\n  width: 100%;\n  max-width: 1230px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n}\n\n.ly_footer {\n  width: 100%;\n  background-color: #001135;\n}\n\n.el_siteLogo {\n  display: inline-block;\n}\n\n.bl_headerNav {\n  display: flex;\n  height: 80px;\n}\n\n.bl_headerNav_list {\n  display: flex;\n  list-style: none;\n  margin-right: 0;\n  margin-left: auto;\n}\n\n.bl_headerNav_list > li {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.bl_headerNav_list > li:not(:first-child) {\n  margin-right: 20px;\n}\n\n.bl_headerNav_link {\n  display: inline-block;\n  text-decoration: none;\n  color: #000;\n  font-weight: 500;\n  padding: 15px;\n}\n.bl_headerNav_link.bl_headerNav_link__contact {\n  text-align: center;\n  color: #fff;\n  height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 187px;\n}\n\n.bl_headerNav_contact {\n  height: inherit;\n  background-color: #011950;\n}\n\n.bl_cta {\n  display: flex;\n}\n.bl_cta .bl_cta_txt {\n  margin-bottom: 32px;\n}\n.bl_cta .el_btn {\n  margin-bottom: 20px;\n}\n\n.bl_cta_imgWrapper {\n  position: relative;\n  width: 56.944444%;\n  min-height: 446px;\n  overflow: hidden;\n  margin: 0;\n}\n.bl_cta_imgWrapper img {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n}\n\n.bl_cta_body {\n  display: flex;\n  flex-direction: column;\n  background-color: #011950;\n  flex: 1;\n  padding: 78px 0 84px 175px;\n}\n\n/* stylelint-disable-next-line no-descending-specificity */\n.bl_cta_txt {\n  color: #fff;\n  font-size: 1.125rem;\n  line-height: 1.666666;\n  display: inline-block;\n}\n.bl_cta_txt::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 1.666666) * 0.5em);\n}\n.bl_cta_txt::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 1.666666) * 0.5em);\n}\n\n.bl_cta_time {\n  color: #fff;\n  font-size: 0.875rem;\n  line-height: 2.142857;\n  display: inline-block;\n}\n.bl_cta_time::before {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-top: calc((1 - 2.142857) * 0.5em);\n}\n.bl_cta_time::after {\n  display: block;\n  content: \"\";\n  width: 0;\n  height: 0;\n  margin-bottom: calc((1 - 2.142857) * 0.5em);\n}\n\n.bl_footer {\n  display: flex;\n}\n\n.bl_footerNav_link {\n  color: #fff;\n}\n\n/* stylelint-disable-next-line no-descending-specificity */\n.el_btn {\n  display: inline-block;\n  text-decoration: none;\n  text-align: center;\n  color: #fff;\n  background-color: #011950;\n  white-space: nowrap;\n  border: 1px solid #fff;\n  border-radius: 4px;\n  width: 235px;\n  min-height: 68px;\n  padding: 18px 0;\n}\n\n.el_beforeIcon::before {\n  margin-right: 10px;\n  display: inline-block;\n  content: attr(data-fa);\n  font-family: \"Font Awesome 6 Free\", sans-serif;\n  font-weight: 400;\n  font-size: 1.1rem;\n}\n.el_beforeIcon.el_beforeIcon__mr16::before {\n  margin-right: 16px;\n}\n.el_beforeIcon.el_beforeIcon__fwBlack::before {\n  font-weight: 900;\n}\n\n.hp_bgBlue {\n  background-color: #011950;\n}","@use \"./variables\" as *;\n\n// ------------------------------------------------\n//  ファイル名：_base.scss\n//  機能：ベーススタイルを記述する\n// ------------------------------------------------\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  color: $color-black;\n  font-family: Roboto, \"Noto Sans JP\", sans-serif;\n  font-weight: $fontweight-regular;\n  line-height: normal;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: 100%;\n}\n\na {\n  color: #0069ff;\n}\n\nimg {\n  max-width: 100%;\n  vertical-align: top;\n}\n","@use \"./mixin\" as *;\n@use \"./variables\" as *;\n\n// ------------------------------------------------\n//  ファイル名：_main.scss\n//  機能：webページ全体のスタイルを記述する\n// ------------------------------------------------\n\n// ----------------------\n//  レイアウト\n// ----------------------\n.ly_wrapper {\n  overflow-x: hidden;\n}\n\n// ヘッダー\n.ly_header {\n  width: 100vw;\n\n  // ロゴとナビげージョンを横並びにする（画面いっぱいに離す）\n  display: flex;\n  justify-content: space-between;\n}\n\n// コンテンツ\n.ly_cont {\n  width: 100%;\n  max-width: 1230px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n}\n\n// フッター\n.ly_footer {\n  width: 100%;\n\n  // 背景色\n  background-color: $color-blue2;\n}\n\n// ----------------------\n//  ヘッダーナビゲーション\n// ----------------------\n.el_siteLogo {\n  display: inline-block;\n}\n\n.bl_headerNav {\n  display: flex;\n  height: 80px;\n}\n\n.bl_headerNav_list {\n  display: flex;\n  list-style: none;\n\n  // 右揃え\n  margin-right: 0;\n  margin-left: auto;\n}\n\n.bl_headerNav_list > li {\n  // 上下左右中央揃え\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:not(:first-child) {\n    margin-right: 20px;\n  }\n}\n\n.bl_headerNav_link {\n  display: inline-block;\n\n  // 文字\n  text-decoration: none;\n  color: $color-black;\n  font-weight: $fontweight-medium;\n\n  // クリック可能領域を広げる\n  padding: 15px;\n\n  // モディファイア：CONTACT\n  &.bl_headerNav_link__contact {\n    // 文字\n    text-align: center;\n    color: $color-white;\n\n    // リンクを上下左右中央揃えにする\n    height: inherit;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    // サイズ\n    width: 187px;\n  }\n}\n\n.bl_headerNav_contact {\n  height: inherit;\n  background-color: $color-blue1;\n}\n\n// ----------------------\n//  CTAエリア\n// ----------------------\n.bl_cta {\n  // 画像とボタン類を横並び\n  display: flex;\n\n  // 配置\n  .bl_cta_txt {\n    margin-bottom: 32px;\n  }\n\n  .el_btn {\n    margin-bottom: 20px;\n  }\n}\n\n.bl_cta_imgWrapper {\n  // 画像の基準位置\n  position: relative;\n\n  // サイズ\n  width: 56.944444%;\n  min-height: 446px;\n\n  // 表示したくない部分を隠す\n  overflow: hidden;\n\n  // 余白をなくす\n  margin: 0;\n\n  img {\n    // 上下左右中央揃え\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    // サイズ\n    width: 100%;\n  }\n}\n\n.bl_cta_body {\n  display: flex;\n  flex-direction: column;\n\n  // 背景色\n  background-color: $color-blue1;\n\n  // 画像エリア以外にいっぱい広げる\n  flex: 1;\n\n  // 余白\n  padding: 78px 0 84px 175px;\n}\n\n/* stylelint-disable-next-line no-descending-specificity */\n.bl_cta_txt {\n  // 文字\n  color: $color-white;\n  font-size: 1.125rem;\n  @include line-height-adjustment(1.666666);\n}\n\n.bl_cta_time {\n  // 文字\n  color: $color-white;\n  font-size: 0.875rem;\n  @include line-height-adjustment(2.142857);\n}\n\n// ----------------------\n//  フッター\n// ----------------------\n.bl_footer {\n  display: flex;\n}\n\n// ----------------------\n//  フッターナビげージョン\n// ----------------------\n.bl_footerNav_link {\n  color: $color-white;\n}\n\n// ----------------------\n//  共通パーツ\n// ----------------------\n/* stylelint-disable-next-line no-descending-specificity */\n.el_btn {\n  display: inline-block;\n\n  // 文字\n  text-decoration: none;\n  text-align: center;\n  color: $color-white;\n  background-color: $color-blue1;\n  white-space: nowrap;\n\n  // ボーダー\n  border: 1px solid $color-white;\n  border-radius: 4px;\n\n  // サイズ・余白\n  width: 235px;\n  min-height: 68px;\n  padding: 18px 0;\n}\n\n// アイコン\n.el_beforeIcon {\n  // 疑似要素\n  &::before {\n    // 文字との余白\n    margin-right: 10px;\n\n    // アイコン\n    display: inline-block;\n    content: attr(data-fa);\n    font-family: \"Font Awesome 6 Free\", sans-serif;\n    font-weight: $fontweight-regular;\n    font-size: 1.1rem;\n  }\n\n  // モディファイア：文字との余白を16pxにする\n  &.el_beforeIcon__mr16::before {\n    margin-right: 16px;\n  }\n\n  // モディファイア：フォントの太さをblackにする\n  &.el_beforeIcon__fwBlack::before {\n    font-weight: $fontweight-black;\n  }\n}\n\n// ----------------------\n//  ヘルパー\n// ----------------------\n// 背景色が青\n.hp_bgBlue {\n  background-color: $color-blue1;\n}\n","@use \"./variables\" as *;\n\n// ------------------------------------------------\n//  ファイル名：_mixin.scss\n//  機能：mixinを記述する\n// ------------------------------------------------\n// ----------\n// 数値から単位を除去する\n// ----------\n@function strip-unit($value) {\n  @if type-of($value) == \"number\" and not unitless($value) {\n    @return $value / ($value * 0 + 1);\n  }\n  @return $value;\n}\n\n// ----------\n// viewport-scaleで設定する値を計算する\n// ----------\n@function viewport-scale-value($min-breakpoint, $min-value, $max-breakpoint, $max-value, $vp-unit) {\n  $u01: math.unit(map.get($breakpoints, $min-breakpoint));\n  $u02: math.unit($min-value);\n  $u03: math.unit(map.get($breakpoints, $max-breakpoint));\n  $u04: math.unit($max-value);\n  $a: strip-unit(map.get($breakpoints, $min-breakpoint));\n  $b: strip-unit($min-value);\n  $c: strip-unit(map.get($breakpoints, $max-breakpoint));\n  $d: strip-unit($max-value);\n\n  // $min-valueと$max-valueが一致している場合は、そのまま返す\n  @if $min-value == $max-value {\n    @return $min-value;\n  }\n\n  // 単位が一致していることが前提\n  @if $u01 == $u03 and $u02 == $u04 {\n    $x: (($d - $b) / ($c - $a) * 100) + #{$vp-unit};\n    $y: (($c * $b - $a * $d) / ($c - $a)) + #{$u02};\n\n    @if $y == 0 {\n      // プロパティ値が小さい数値→大きい数値への変動の場合\n      @if $min-value < $max-value {\n        @return max($x, $min-value);\n      }\n\n      // プロパティ値が大きい数値→小さい数値への変動の場合\n      @else {\n        @return min($x, $min-value);\n      }\n    } @else {\n      // プロパティ値が小さい数値→大きい数値への変動の場合\n      @if $min-value < $max-value {\n        @return max(calc(#{$x} + #{$y}), $min-value);\n      }\n\n      // プロパティ値が大きい数値→小さい数値への変動の場合\n      @else {\n        @return min(calc(#{$x} + #{$y}), $min-value);\n      }\n    }\n  }\n  @return 0;\n}\n\n// ----------\n// 画面幅の変動に応じて、プロパティの値を変動させる\n// ----------\n// $property: 設定したいプロパティ\n// $min-vp: 変動前の画面幅\n// $min-value: 変動前のプロパティ値\n// $max-vp: 変動後の画面幅\n// max-value: 変動後のプロパティ値\n// $vp-unit: 単位\n// ----------\n@mixin viewport-scale($property, $min-breakpoint: sm, $min-value, $max-breakpoint: md, $max-value, $vp-unit: \"vw\") {\n  // $min-valueの個数と$max-valueの個数が一致していることが前提\n  @if length($min-value) == length($max-value) {\n    // プロパティ値が1つの場合\n    @if length($min-value) == 1 {\n      #{$property}: viewport-scale-value($min-breakpoint, $min-value, $max-breakpoint, $max-value, $vp-unit);\n    }\n\n    // プロパティ値が2つの場合（margin/paddingを想定）\n    @else if length($min-value) == 2 {\n      #{$property}-top: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 1),\n        $max-breakpoint,\n        list.nth($max-value, 1),\n        $vp-unit\n      );\n      #{$property}-right: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 2),\n        $max-breakpoint,\n        list.nth($max-value, 2),\n        $vp-unit\n      );\n      #{$property}-bottom: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 1),\n        $max-breakpoint,\n        list.nth($max-value, 1),\n        $vp-unit\n      );\n      #{$property}-left: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 2),\n        $max-breakpoint,\n        list.nth($max-value, 2),\n        $vp-unit\n      );\n    }\n\n    // プロパティ値が3つの場合（margin/paddingを想定）\n    @else if length($min-value) == 3 {\n      #{$property}-top: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 1),\n        $max-breakpoint,\n        list.nth($max-value, 1),\n        $vp-unit\n      );\n      #{$property}-right: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 2),\n        $max-breakpoint,\n        list.nth($max-value, 2),\n        $vp-unit\n      );\n      #{$property}-bottom: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 2),\n        $max-breakpoint,\n        list.nth($max-value, 2),\n        $vp-unit\n      );\n      #{$property}-left: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 3),\n        $max-breakpoint,\n        list.nth($max-value, 3),\n        $vp-unit\n      );\n    }\n\n    // プロパティ値が4つの場合（margin/paddingを想定）\n    @else if length($min-value) == 4 {\n      #{$property}-top: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 1),\n        $max-breakpoint,\n        list.nth($max-value, 1),\n        $vp-unit\n      );\n      #{$property}-right: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 2),\n        $max-breakpoint,\n        list.nth($max-value, 2),\n        $vp-unit\n      );\n      #{$property}-bottom: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 3),\n        $max-breakpoint,\n        list.nth($max-value, 3),\n        $vp-unit\n      );\n      #{$property}-left: viewport-scale-value(\n        $min-breakpoint,\n        list.nth($min-value, 4),\n        $max-breakpoint,\n        list.nth($max-value, 4),\n        $vp-unit\n      );\n    }\n  }\n}\n\n// ----------\n//  スマホ幅用メディアクエリを定義する（PC幅が基準）\n// ----------\n@mixin sp() {\n  @media screen and (max-width: map.get($breakpoints, sm)) {\n    @content;\n  }\n}\n\n// ----------\n//  line-heightを調節する（XDとwebで仕様が異なるため）\n// ----------\n//  $line-height: line-heightの指定値\n// ----------\n@mixin line-height-adjustment($lineHeight) {\n  line-height: $lineHeight;\n  display: inline-block;\n\n  &::before {\n    display: block;\n    content: \"\";\n    width: 0;\n    height: 0;\n    margin-top: calc((1 - #{$lineHeight}) * 0.5em);\n  }\n\n  &::after {\n    display: block;\n    content: \"\";\n    width: 0;\n    height: 0;\n    margin-bottom: calc((1 - #{$lineHeight}) * 0.5em);\n  }\n}\n\n// ----------\n//  行間を調節する（XDとwebで仕様が異なるため）\n//  line-height-adjustment()でもずれる場合に固定値で調整\n//  行間を減らしたい場合に使用する\n//  行間を増やしたい場合はline-height-inc()を使用する\n// ----------\n//  $value: 調整値\n// ----------\n@mixin line-height-dec($value-top, $value-bottom) {\n  // 上部に余白\n  &::before {\n    margin-top: $value-top;\n  }\n\n  // 下部に余白\n  &::after {\n    margin-bottom: $value-bottom;\n  }\n}\n\n// ----------\n//  行間を調節する（XDとwebで仕様が異なるため）\n//  line-height-adjustment()でもずれる場合に固定値で調整\n//  行間を増やすしたい場合に使用する\n//  行間を減らしたい場合はline-height-dec()を使用する\n// ----------\n//  $value: 調整値\n// ----------\n@mixin line-height-inc($value-top, $value-bottom) {\n  // 上部に余白\n  &::before {\n    padding-top: $value-top;\n  }\n\n  // 下部に余白\n  &::after {\n    padding-bottom: $value-bottom;\n  }\n}\n"]}